// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render SearchInput correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchInput />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <button
          className="refreshbtn"
          onClick={[Function]}
>
          refresh
</button>,
        <form
          onSubmit={[Function]}
>
          <input
                    className="input-field"
                    onChange={[Function]}
                    placeholder="get weather forecast in your city"
                    type="text"
                    value=""
          />
          <button>
                    search weather
          </button>
</form>,
      ],
      "className": "search-input",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "refresh",
          "className": "refreshbtn",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "refresh",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              className="input-field"
              onChange={[Function]}
              placeholder="get weather forecast in your city"
              type="text"
              value=""
/>,
            <button>
              search weather
</button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "input-field",
              "onChange": [Function],
              "placeholder": "get weather forecast in your city",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "search weather",
            },
            "ref": null,
            "rendered": "search weather",
            "type": "button",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            className="refreshbtn"
            onClick={[Function]}
>
            refresh
</button>,
          <form
            onSubmit={[Function]}
>
            <input
                        className="input-field"
                        onChange={[Function]}
                        placeholder="get weather forecast in your city"
                        type="text"
                        value=""
            />
            <button>
                        search weather
            </button>
</form>,
        ],
        "className": "search-input",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "refresh",
            "className": "refreshbtn",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "refresh",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                className="input-field"
                onChange={[Function]}
                placeholder="get weather forecast in your city"
                type="text"
                value=""
/>,
              <button>
                search weather
</button>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "input-field",
                "onChange": [Function],
                "placeholder": "get weather forecast in your city",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "search weather",
              },
              "ref": null,
              "rendered": "search weather",
              "type": "button",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
